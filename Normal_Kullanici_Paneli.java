
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ranadudukabak
 */
public class Normal_Kullanici_Paneli extends javax.swing.JDialog {
    public static String secilen_kullanici_adi;
    String normal_kullanici_adi  = Giris_Paneli.normal_kullanici_adi;

    DefaultTableModel modelGenel;
    DefaultTableModel modelKlasik;
    DefaultTableModel modelJazz;
    DefaultTableModel modelPop;
    DefaultTableModel modelPremium;
    Normal_Kullanici_Islemleri normalKullaniciIslemleri = new Normal_Kullanici_Islemleri();
    /**
     * Creates new form Normal_Kullanici_Paneli
     */
    public Normal_Kullanici_Paneli(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        modelGenel = (DefaultTableModel) GenelSarkiTablosu.getModel();
        Muzikleri_Goruntule();
        
        modelKlasik = (DefaultTableModel) KlasikSarkiTablosu.getModel();
        Kullanici_Klasik_Muzikleri_Goruntule();
        
        modelJazz = (DefaultTableModel) JazzSarkiTablosu.getModel();
        Kullanici_Jazz_Muzikleri_Goruntule();
        
        modelPop = (DefaultTableModel) PopSarkiTablosu.getModel();
        Kullanici_Pop_Muzikleri_Goruntule();
        
        modelPremium = (DefaultTableModel) PremiumKullaniciTablosu.getModel();
        Premium_Kullanicilari_Goruntule();
        
        //String normal_kullanici_adi  = Giris_Paneli.normal_kullanici_adi;
        NormalKullaniciAdiAlani.setText(normal_kullanici_adi);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        GenelSarkiTablosu = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        KlasikSarkiTablosu = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        JazzSarkiTablosu = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        PopSarkiTablosu = new javax.swing.JTable();
        FavorilereEkleButonu = new javax.swing.JButton();
        FavorilerdenSilButonu = new javax.swing.JButton();
        GenelArama = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        KlasikArama = new javax.swing.JTextField();
        JazzArama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        PopArama = new javax.swing.JTextField();
        MesajYazisi = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PremiumKullaniciTablosu = new javax.swing.JTable();
        CikisButonu = new javax.swing.JButton();
        KullaniciyaGitButonu = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        NormalKullaniciAdiAlani = new javax.swing.JLabel();
        top10Butonu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        GenelSarkiTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GenelSarkiTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GenelSarkiTablosuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(GenelSarkiTablosu);

        KlasikSarkiTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KlasikSarkiTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KlasikSarkiTablosuMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(KlasikSarkiTablosu);

        JazzSarkiTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JazzSarkiTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JazzSarkiTablosuMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(JazzSarkiTablosu);

        PopSarkiTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PopSarkiTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PopSarkiTablosuMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(PopSarkiTablosu);

        FavorilereEkleButonu.setText("FAVORİLERE EKLE");
        FavorilereEkleButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FavorilereEkleButonuActionPerformed(evt);
            }
        });

        FavorilerdenSilButonu.setText("FAVORİLERDEN SİL");
        FavorilerdenSilButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FavorilerdenSilButonuActionPerformed(evt);
            }
        });

        GenelArama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenelAramaActionPerformed(evt);
            }
        });

        jLabel1.setText("KLASİK MÜZİKLER");

        jLabel2.setText("JAZZ MÜZİKLER");

        jLabel3.setText("POP MÜZİKLER");

        MesajYazisi.setText("MESAJ YAZISI");

        PremiumKullaniciTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Premium Kullanıcılar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PremiumKullaniciTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PremiumKullaniciTablosuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(PremiumKullaniciTablosu);
        if (PremiumKullaniciTablosu.getColumnModel().getColumnCount() > 0) {
            PremiumKullaniciTablosu.getColumnModel().getColumn(0).setResizable(false);
        }

        CikisButonu.setText("ÇIKIŞ YAP");
        CikisButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CikisButonuActionPerformed(evt);
            }
        });

        KullaniciyaGitButonu.setText("KULLANICIYA GİT");
        KullaniciyaGitButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KullaniciyaGitButonuActionPerformed(evt);
            }
        });

        jLabel5.setText("          NORMAL KULLANICI");

        top10Butonu.setText("TOP 10 ");
        top10Butonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top10ButonuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FavorilerdenSilButonu, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FavorilereEkleButonu, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MesajYazisi, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(KlasikArama, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(JazzArama))))
                            .addComponent(GenelArama, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(PopArama, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(KullaniciyaGitButonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CikisButonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(top10Butonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(NormalKullaniciAdiAlani, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GenelArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(FavorilereEkleButonu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FavorilerdenSilButonu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(MesajYazisi))
                                    .addComponent(KullaniciyaGitButonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NormalKullaniciAdiAlani, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CikisButonu)
                        .addGap(37, 37, 37)
                        .addComponent(top10Butonu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(KlasikArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(JazzArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(PopArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GenelSarkiTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GenelSarkiTablosuMouseClicked
        // TODO add your handling code here:
//        int selectedrow = GenelSarkiTablosu.getSelectedRow();
//
//        SarkiAdiAlani.setText(model.getValueAt(selectedrow, 1).toString());
//        SarkiTarihiAlani.setText(model.getValueAt(selectedrow, 2).toString());
//        SarkiSanatciAlani.setText(model.getValueAt(selectedrow, 3).toString());
//        SarkiAlbumAlani.setText(model.getValueAt(selectedrow, 4).toString());
//        SarkiTurAlani.setText(model.getValueAt(selectedrow, 5).toString());
//        SarkiSureAlani.setText(model.getValueAt(selectedrow, 6).toString());
//        SarkiDinlenmeSayisiAlani.setText(model.getValueAt(selectedrow, 7).toString());
    }//GEN-LAST:event_GenelSarkiTablosuMouseClicked

    private void KlasikSarkiTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KlasikSarkiTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_KlasikSarkiTablosuMouseClicked

    private void JazzSarkiTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JazzSarkiTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JazzSarkiTablosuMouseClicked

    private void PopSarkiTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PopSarkiTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PopSarkiTablosuMouseClicked

    private void GenelAramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenelAramaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenelAramaActionPerformed

    private void FavorilereEkleButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FavorilereEkleButonuActionPerformed
        // TODO add your handling code here:
        int selectedrow = GenelSarkiTablosu.getSelectedRow();
        
        String sarkiAd = modelGenel.getValueAt(selectedrow, 1).toString();
        String sarkiTarih = modelGenel.getValueAt(selectedrow, 2).toString();
        String sarkiSanatci = modelGenel.getValueAt(selectedrow, 3).toString();
        String sarkiAlbum = modelGenel.getValueAt(selectedrow, 4).toString();
        String sarkiTur = modelGenel.getValueAt(selectedrow, 5).toString();
        String sarkiSure = modelGenel.getValueAt(selectedrow, 6).toString();
        String sarkiDinlenmeSayisi = modelGenel.getValueAt(selectedrow, 7).toString();
        
             if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){

        normalKullaniciIslemleri.gamzeKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
             else if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){

        normalKullaniciIslemleri.etkaKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){

        normalKullaniciIslemleri.melisaKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){

        normalKullaniciIslemleri.furkanKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                   if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){

        normalKullaniciIslemleri.muratKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
        Kullanici_Klasik_Muzikleri_Goruntule();
        Kullanici_Jazz_Muzikleri_Goruntule();
        Kullanici_Pop_Muzikleri_Goruntule();
        
        MesajYazisi.setText("Şarkı favorilere başarıyla eklendi.");
    }//GEN-LAST:event_FavorilereEkleButonuActionPerformed

    private void FavorilerdenSilButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FavorilerdenSilButonuActionPerformed
        // TODO add your handling code here:
                int flag = 0;
        
        int selectedrow = KlasikSarkiTablosu.getSelectedRow();
        int selectedrow2 = JazzSarkiTablosu.getSelectedRow();
        int selectedrow3 = PopSarkiTablosu.getSelectedRow();
        
        if(selectedrow != -1) {
            flag = 1;
        } else if(selectedrow2 != -1) {
            flag = 2;
        } else if(selectedrow3 != -1){
            flag = 3;
        }
        if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){

        
        if(flag == 1) {
            int id = (int) modelKlasik.getValueAt(selectedrow, 0);
            normalKullaniciIslemleri.gamzeKullaniciMuzikSil(id);
            Kullanici_Klasik_Muzikleri_Goruntule();
        } else if(flag == 2) {
            int id2 = (int) modelJazz.getValueAt(selectedrow2, 0);
            normalKullaniciIslemleri.gamzeKullaniciMuzikSil(id2);
            Kullanici_Jazz_Muzikleri_Goruntule(); 
        } else if(flag == 3) {
            int id3 = (int) modelPop.getValueAt(selectedrow3, 0);
            normalKullaniciIslemleri.gamzeKullaniciMuzikSil(id3);
            Kullanici_Pop_Muzikleri_Goruntule(); 
        }
        }
        ////////////////////////////////////////////
           else     if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){

        if(flag == 1) {
            int id = (int) modelKlasik.getValueAt(selectedrow, 0);
            normalKullaniciIslemleri.etkaKullaniciMuzikSil(id);
            Kullanici_Klasik_Muzikleri_Goruntule();
        } else if(flag == 2) {
            int id2 = (int) modelJazz.getValueAt(selectedrow2, 0);
            normalKullaniciIslemleri.etkaKullaniciMuzikSil(id2);
            Kullanici_Jazz_Muzikleri_Goruntule(); 
        } else if(flag == 3) {
            int id3 = (int) modelPop.getValueAt(selectedrow3, 0);
            normalKullaniciIslemleri.etkaKullaniciMuzikSil(id3);
            Kullanici_Pop_Muzikleri_Goruntule(); 
        }
        }
                
         ///////////////
          else       if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){

        
        if(flag == 1) {
            int id = (int) modelKlasik.getValueAt(selectedrow, 0);
            normalKullaniciIslemleri.melisaKullaniciMuzikSil(id);
            Kullanici_Klasik_Muzikleri_Goruntule();
        } else if(flag == 2) {
            int id2 = (int) modelJazz.getValueAt(selectedrow2, 0);
            normalKullaniciIslemleri.melisaKullaniciMuzikSil(id2);
            Kullanici_Jazz_Muzikleri_Goruntule(); 
        } else if(flag == 3) {
            int id3 = (int) modelPop.getValueAt(selectedrow3, 0);
            normalKullaniciIslemleri.melisaKullaniciMuzikSil(id3);
            Kullanici_Pop_Muzikleri_Goruntule(); 
        }
        }
                 //////////////////////
                     else    if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){

        
        if(flag == 1) {
            int id = (int) modelKlasik.getValueAt(selectedrow, 0);
            normalKullaniciIslemleri.furkanKullaniciMuzikSil(id);
            Kullanici_Klasik_Muzikleri_Goruntule();
        } else if(flag == 2) {
            int id2 = (int) modelJazz.getValueAt(selectedrow2, 0);
            normalKullaniciIslemleri.furkanKullaniciMuzikSil(id2);
            Kullanici_Jazz_Muzikleri_Goruntule(); 
        } else if(flag == 3) {
            int id3 = (int) modelPop.getValueAt(selectedrow3, 0);
            normalKullaniciIslemleri.furkanKullaniciMuzikSil(id3);
            Kullanici_Pop_Muzikleri_Goruntule(); 
        }
        }
                         ////////////
        else if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){

        
        if(flag == 1) {
            int id = (int) modelKlasik.getValueAt(selectedrow, 0);
            normalKullaniciIslemleri.muratKullaniciMuzikSil(id);
            Kullanici_Klasik_Muzikleri_Goruntule();
        } else if(flag == 2) {
            int id2 = (int) modelJazz.getValueAt(selectedrow2, 0);
            normalKullaniciIslemleri.muratKullaniciMuzikSil(id2);
            Kullanici_Jazz_Muzikleri_Goruntule(); 
        } else if(flag == 3) {
            int id3 = (int) modelPop.getValueAt(selectedrow3, 0);
            normalKullaniciIslemleri.muratKullaniciMuzikSil(id3);
            Kullanici_Pop_Muzikleri_Goruntule(); 
        }
        }
                
                
                
                
    }//GEN-LAST:event_FavorilerdenSilButonuActionPerformed
    
    private void CikisButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CikisButonuActionPerformed
        // TODO add your handling code here:
         setVisible(false);
        Giris_Paneli giris = new Giris_Paneli();
        
       // setVisible(false);
        giris.setVisible(true);
        
        System.exit(0);
    }//GEN-LAST:event_CikisButonuActionPerformed

    private void PremiumKullaniciTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PremiumKullaniciTablosuMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_PremiumKullaniciTablosuMouseClicked

    private void KullaniciyaGitButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KullaniciyaGitButonuActionPerformed
        // TODO add your handling code here:
        int selectedrow = PremiumKullaniciTablosu.getSelectedRow();
        
       secilen_kullanici_adi = modelPremium.getValueAt(selectedrow, 0).toString();
       
       
     
        Giris_Paneli giris = new Giris_Paneli();
        Gecis_Paneli gecisPaneli = new  Gecis_Paneli(giris, true);        
        setVisible(false);
            
        gecisPaneli.setVisible(true);
        System.exit(0);
        
        
        
        
    }//GEN-LAST:event_KullaniciyaGitButonuActionPerformed

    private void top10ButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top10ButonuActionPerformed
        // TODO add your handling code here:
        Giris_Paneli giris = new Giris_Paneli();
        
        Kullanici_Top_10_Listeleri top10 = new Kullanici_Top_10_Listeleri(giris, true);
        setVisible(false);
            
        top10.setVisible(true);
        System.exit(0);
    }//GEN-LAST:event_top10ButonuActionPerformed

    public void Muzikleri_Goruntule() {
        
        modelGenel.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.SarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelGenel.addRow(eklenecek);
            }
        }
    }
    
    public void Kullanici_Klasik_Muzikleri_Goruntule() {
     if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){
        modelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.KullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelKlasik.addRow(eklenecek);
            }
        }
    }
        else  if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){
        modelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.etkaKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelKlasik.addRow(eklenecek);
            }
        }
    }
             else  if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){
        modelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.furkanKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelKlasik.addRow(eklenecek);
            }
        }
    }
       else  if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){
        modelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.melisaKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelKlasik.addRow(eklenecek);
            }
        }
    }
       else  if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){
        modelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.muratKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelKlasik.addRow(eklenecek);
            }
        }
    }
} 
    
    
    
    
    public void Kullanici_Jazz_Muzikleri_Goruntule() {
    if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){    
        modelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.KullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelJazz.addRow(eklenecek);
            }
        }
    }
        else  if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){
        modelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.etkaKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelJazz.addRow(eklenecek);
            }
        }
    }
            else  if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){
        modelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.furkanKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelJazz.addRow(eklenecek);
            }
        }
    }
                else  if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){
        modelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.melisaKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelJazz.addRow(eklenecek);
            }
        }
    }
                else  if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){
        modelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.muratKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelJazz.addRow(eklenecek);
            }
        }
    }
    }  
    
    
    
    
    
    public void Kullanici_Pop_Muzikleri_Goruntule() {
    if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){    
        modelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.KullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelPop.addRow(eklenecek);
            }
        }
    }
    else if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){    
        modelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.etkaKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelPop.addRow(eklenecek);
            }
        }
    }
    else if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){    
        modelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.furkanKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelPop.addRow(eklenecek);
            }
        }
    }
    
    else if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){    
        modelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.melisaKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelPop.addRow(eklenecek);
            }
        }
    }
    
    else if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){    
        modelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = normalKullaniciIslemleri.muratKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                modelPop.addRow(eklenecek);
            }
        }
    }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    public void Premium_Kullanicilari_Goruntule() {
        
        modelPremium.setRowCount(0);

        ArrayList<Premium_Kullanici> premiumKullanicilar = new ArrayList<Premium_Kullanici>();

        premiumKullanicilar = normalKullaniciIslemleri.PremiumKullanicilariGetir();

        if (premiumKullanicilar != null) {

            for (Premium_Kullanici premiumKullanici : premiumKullanicilar) {
                Object[] eklenecek = {premiumKullanici.getKullaniciAd()};

                modelPremium.addRow(eklenecek);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Normal_Kullanici_Paneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Normal_Kullanici_Paneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Normal_Kullanici_Paneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Normal_Kullanici_Paneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Normal_Kullanici_Paneli dialog = new Normal_Kullanici_Paneli(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CikisButonu;
    private javax.swing.JButton FavorilerdenSilButonu;
    private javax.swing.JButton FavorilereEkleButonu;
    private javax.swing.JTextField GenelArama;
    private javax.swing.JTable GenelSarkiTablosu;
    private javax.swing.JTextField JazzArama;
    private javax.swing.JTable JazzSarkiTablosu;
    private javax.swing.JTextField KlasikArama;
    private javax.swing.JTable KlasikSarkiTablosu;
    private javax.swing.JButton KullaniciyaGitButonu;
    private javax.swing.JLabel MesajYazisi;
    private javax.swing.JLabel NormalKullaniciAdiAlani;
    private javax.swing.JTextField PopArama;
    private javax.swing.JTable PopSarkiTablosu;
    private javax.swing.JTable PremiumKullaniciTablosu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton top10Butonu;
    // End of variables declaration//GEN-END:variables
}
