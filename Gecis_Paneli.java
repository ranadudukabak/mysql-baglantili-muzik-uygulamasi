
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ranadudukabak
 */
public class Gecis_Paneli extends javax.swing.JDialog {
    DefaultTableModel kendimodelKlasik;
    DefaultTableModel kendimodelJazz;
    DefaultTableModel kendimodelPop;
     DefaultTableModel premiummodelKlasik;
    DefaultTableModel premiummodelJazz;
    DefaultTableModel premiummodelPop;
    String normal_kullanici_adi  = Giris_Paneli.normal_kullanici_adi;
    String secilen_kullanici_adi  = Normal_Kullanici_Paneli.secilen_kullanici_adi;
    String premium_kullanici_adi  = Giris_Paneli.premium_kullanici_adi;
    
    Gecis_Islemleri gecisIslemleri = new Gecis_Islemleri();

    /**
     * Creates new form Gecis_Paneli
     */
    public Gecis_Paneli(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        kendimodelKlasik = (DefaultTableModel) KendiKlasikTablosu.getModel();
        Kullanici_Klasik_Muzikleri_Goruntule();
        
        kendimodelJazz = (DefaultTableModel) KendiJazzTablosu.getModel();
        Kullanici_Jazz_Muzikleri_Goruntule();
        
        kendimodelPop = (DefaultTableModel) KendiPopTablosu.getModel();
        Kullanici_Pop_Muzikleri_Goruntule();
        
        premiummodelKlasik = (DefaultTableModel) PremiumKlasikTablosu.getModel();
        Premium_Klasik_Muzikleri_Goruntule();
        
        premiummodelJazz = (DefaultTableModel) PremiumJazzTablosu.getModel();
        Premium_Jazz_Muzikleri_Goruntule();
        
        premiummodelPop = (DefaultTableModel) PremiumPopTablosu.getModel();
        Premium_Pop_Muzikleri_Goruntule();
        
        
      //String normal_kullanici_adi  = Giris_Paneli.normal_kullanici_adi;
      KendiKullaniciAdiAlanimiz.setText(normal_kullanici_adi);
       
     // String secilen_kullanici_adi  = Normal_Kullanici_Paneli.secilen_kullanici_adi;
      PremiumKullaniciAdiAlani.setText(secilen_kullanici_adi );
   
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        PremiumJazzTablosu = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        PremiumPopTablosu = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        PremiumKlasikTablosu = new javax.swing.JTable();
        KlasikTumunuEkleButonu = new javax.swing.JButton();
        JazzTumunuEkle = new javax.swing.JButton();
        PopTumunuEkle = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        KendiPopTablosu = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        KendiKlasikTablosu = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        KendiJazzTablosu = new javax.swing.JTable();
        KendiKullaniciAdimiz = new javax.swing.JLabel();
        PremiumKlasikArama = new javax.swing.JTextField();
        PremiumJazzArama = new javax.swing.JTextField();
        PremiumPopArama = new javax.swing.JTextField();
        KendiKlasikArama = new javax.swing.JTextField();
        KendiJazzArama = new javax.swing.JTextField();
        KendiPopArama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        PremiumKullaniciAdiAlani = new javax.swing.JLabel();
        KendiKullaniciAdiAlanimiz = new javax.swing.JLabel();
        KlasikEkleButonu = new javax.swing.JButton();
        JazzEkleButonu = new javax.swing.JButton();
        JazzSilmeButonu = new javax.swing.JButton();
        KlasikSilmeButonu = new javax.swing.JButton();
        PopSilmeButonu = new javax.swing.JButton();
        PopEkleButonu = new javax.swing.JButton();
        GeriButonu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        PremiumJazzTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PremiumJazzTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PremiumJazzTablosuMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(PremiumJazzTablosu);

        PremiumPopTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PremiumPopTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PremiumPopTablosuMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(PremiumPopTablosu);

        PremiumKlasikTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PremiumKlasikTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PremiumKlasikTablosuMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(PremiumKlasikTablosu);

        KlasikTumunuEkleButonu.setText("TÜMÜNÜ EKLE");

        JazzTumunuEkle.setText("TÜMÜNÜ EKLE");

        PopTumunuEkle.setText("TÜMÜNÜ EKLE");

        KendiPopTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KendiPopTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KendiPopTablosuMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(KendiPopTablosu);

        KendiKlasikTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KendiKlasikTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KendiKlasikTablosuMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(KendiKlasikTablosu);

        KendiJazzTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ad", "Şarkı Tarih", "Şarkı Sanatçı", "Şarkı Albüm", "Şarkı Tür", "Şarkı Süre", "Şarkı Dinlenme Sayısı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KendiJazzTablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KendiJazzTablosuMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(KendiJazzTablosu);

        KendiKullaniciAdimiz.setText("Kendi Kullanıcı Adımız:");

        jLabel3.setText("Premium Kullanıcı Adı:");

        KlasikEkleButonu.setText("SEÇİLENİ EKLE");
        KlasikEkleButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KlasikEkleButonuActionPerformed(evt);
            }
        });

        JazzEkleButonu.setText("SECİLENİ EKLE");
        JazzEkleButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JazzEkleButonuActionPerformed(evt);
            }
        });

        JazzSilmeButonu.setText("SEÇİLENİ SİL");
        JazzSilmeButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JazzSilmeButonuActionPerformed(evt);
            }
        });

        KlasikSilmeButonu.setText("SEÇİLENİ SİL");
        KlasikSilmeButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KlasikSilmeButonuActionPerformed(evt);
            }
        });

        PopSilmeButonu.setText("SEÇİLENİ SİL");
        PopSilmeButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopSilmeButonuActionPerformed(evt);
            }
        });

        PopEkleButonu.setText("SECİLENİ EKLE");
        PopEkleButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopEkleButonuActionPerformed(evt);
            }
        });

        GeriButonu.setText("<-");
        GeriButonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeriButonuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(PremiumKullaniciAdiAlani, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(PremiumPopArama))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PremiumKlasikArama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PremiumJazzArama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JazzTumunuEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PopTumunuEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(KlasikTumunuEkleButonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JazzEkleButonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(KlasikEkleButonu, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(JazzSilmeButonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(KlasikSilmeButonu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PopSilmeButonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PopEkleButonu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(GeriButonu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(KendiKullaniciAdimiz, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(KendiKullaniciAdiAlanimiz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(KendiKlasikArama, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(KendiJazzArama)
                    .addComponent(KendiPopArama))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(KendiKullaniciAdimiz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(KendiKullaniciAdiAlanimiz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(GeriButonu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PremiumKullaniciAdiAlani, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PremiumKlasikArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KendiKlasikArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(KlasikEkleButonu)
                        .addGap(18, 18, 18)
                        .addComponent(KlasikSilmeButonu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(KlasikTumunuEkleButonu)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PremiumJazzArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KendiJazzArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JazzEkleButonu)
                        .addGap(27, 27, 27)
                        .addComponent(JazzSilmeButonu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JazzTumunuEkle))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PremiumPopArama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KendiPopArama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(PopEkleButonu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PopSilmeButonu)
                        .addGap(28, 28, 28)
                        .addComponent(PopTumunuEkle)))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PremiumJazzTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PremiumJazzTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PremiumJazzTablosuMouseClicked

    private void PremiumPopTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PremiumPopTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PremiumPopTablosuMouseClicked

    private void PremiumKlasikTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PremiumKlasikTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PremiumKlasikTablosuMouseClicked

    private void KendiPopTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KendiPopTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_KendiPopTablosuMouseClicked

    private void KendiKlasikTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KendiKlasikTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_KendiKlasikTablosuMouseClicked

    private void KendiJazzTablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KendiJazzTablosuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_KendiJazzTablosuMouseClicked

    private void KlasikEkleButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KlasikEkleButonuActionPerformed
        // TODO add your handling code here:        
        int selectedrow = PremiumKlasikTablosu.getSelectedRow();
        String sarkiAd = premiummodelKlasik.getValueAt(selectedrow, 1).toString();
        String sarkiTarih = premiummodelKlasik.getValueAt(selectedrow, 2).toString();
        String sarkiSanatci = premiummodelKlasik.getValueAt(selectedrow, 3).toString();
        String sarkiAlbum = premiummodelKlasik.getValueAt(selectedrow, 4).toString();
        String sarkiTur = premiummodelKlasik.getValueAt(selectedrow, 5).toString();
        String sarkiSure = premiummodelKlasik.getValueAt(selectedrow, 6).toString();
        String sarkiDinlenmeSayisi = premiummodelKlasik.getValueAt(selectedrow, 7).toString();
    
             if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){

        gecisIslemleri.gamzeKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
             else if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){

        gecisIslemleri.etkaKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){

        gecisIslemleri.melisaKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){

        gecisIslemleri.furkanKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                   if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){

        gecisIslemleri.muratKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
        
        
        
        Kullanici_Klasik_Muzikleri_Goruntule();
        Kullanici_Jazz_Muzikleri_Goruntule();
        Kullanici_Pop_Muzikleri_Goruntule();
       
    }//GEN-LAST:event_KlasikEkleButonuActionPerformed

    private void JazzEkleButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JazzEkleButonuActionPerformed
        // TODO add your handling code here:
        int selectedrow2 = PremiumJazzTablosu.getSelectedRow();
          String sarkiAd = premiummodelJazz.getValueAt(selectedrow2, 1).toString();
        String sarkiTarih = premiummodelJazz.getValueAt(selectedrow2, 2).toString();
        String sarkiSanatci = premiummodelJazz.getValueAt(selectedrow2, 3).toString();
        String sarkiAlbum = premiummodelJazz.getValueAt(selectedrow2, 4).toString();
        String sarkiTur = premiummodelJazz.getValueAt(selectedrow2, 5).toString();
        String sarkiSure = premiummodelJazz.getValueAt(selectedrow2, 6).toString();
        String sarkiDinlenmeSayisi = premiummodelJazz.getValueAt(selectedrow2, 7).toString();
        
       // gecisIslemleri.gamzeKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
               if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){

        gecisIslemleri.gamzeKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
             else if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){

        gecisIslemleri.etkaKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){

        gecisIslemleri.melisaKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){

        gecisIslemleri.furkanKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                   if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){

        gecisIslemleri.muratKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
        Kullanici_Klasik_Muzikleri_Goruntule();
        Kullanici_Jazz_Muzikleri_Goruntule();
        Kullanici_Pop_Muzikleri_Goruntule();
    }//GEN-LAST:event_JazzEkleButonuActionPerformed

    private void PopEkleButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopEkleButonuActionPerformed
        // TODO add your handling code here:
        int selectedrow = PremiumPopTablosu.getSelectedRow();
        String sarkiAd = premiummodelPop.getValueAt(selectedrow, 1).toString();
        String sarkiTarih = premiummodelPop.getValueAt(selectedrow, 2).toString();
        String sarkiSanatci = premiummodelPop.getValueAt(selectedrow, 3).toString();
        String sarkiAlbum = premiummodelPop.getValueAt(selectedrow, 4).toString();
        String sarkiTur = premiummodelPop.getValueAt(selectedrow, 5).toString();
        String sarkiSure = premiummodelPop.getValueAt(selectedrow, 6).toString();
        String sarkiDinlenmeSayisi = premiummodelPop.getValueAt(selectedrow, 7).toString();
        
       // gecisIslemleri.gamzeKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
               if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){

        gecisIslemleri.gamzeKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
             else if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){

        gecisIslemleri.etkaKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){

        gecisIslemleri.melisaKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){

        gecisIslemleri.furkanKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
                   if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){

        gecisIslemleri.muratKullaniciFavorilereMuzikEkle(sarkiAd, sarkiTarih, sarkiSanatci, sarkiAlbum, sarkiTur, sarkiSure, sarkiDinlenmeSayisi);
             }
        Kullanici_Klasik_Muzikleri_Goruntule();
        Kullanici_Jazz_Muzikleri_Goruntule();
        Kullanici_Pop_Muzikleri_Goruntule();
    }//GEN-LAST:event_PopEkleButonuActionPerformed

    private void GeriButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeriButonuActionPerformed
        // TODO add your handling code here:
        Giris_Paneli giris = new Giris_Paneli();
        
        Normal_Kullanici_Paneli normalkullaniciPaneli = new Normal_Kullanici_Paneli(giris, true);
        setVisible(false);
            
        normalkullaniciPaneli.setVisible(true);
        System.exit(0);
    }//GEN-LAST:event_GeriButonuActionPerformed

    private void KlasikSilmeButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KlasikSilmeButonuActionPerformed
        // TODO add your handling code here:
        int selectedrow = KendiKlasikTablosu.getSelectedRow();
        int id = (int) kendimodelKlasik.getValueAt(selectedrow, 0);
          //  gecisIslemleri.KullaniciMuzikSil(id);
                         if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){

        gecisIslemleri.etkaKullaniciMuzikSil(id);
             }
             else if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){

        gecisIslemleri.gamzeKullaniciMuzikSil(id);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){
gecisIslemleri.melisaKullaniciMuzikSil(id);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){

        gecisIslemleri.furkanKullaniciMuzikSil(id);
             }
                   if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){

       gecisIslemleri.muratKullaniciMuzikSil(id);
             }
            Kullanici_Klasik_Muzikleri_Goruntule();
        
        
    }//GEN-LAST:event_KlasikSilmeButonuActionPerformed

    private void JazzSilmeButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JazzSilmeButonuActionPerformed
        // TODO add your handling code here:
        int selectedrow = KendiJazzTablosu.getSelectedRow();
        int id = (int) kendimodelJazz.getValueAt(selectedrow, 0);
            //gecisIslemleri.KullaniciMuzikSil(id);
                                     if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){

        gecisIslemleri.etkaKullaniciMuzikSil(id);
             }
             else if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){

        gecisIslemleri.gamzeKullaniciMuzikSil(id);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){
gecisIslemleri.melisaKullaniciMuzikSil(id);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){

        gecisIslemleri.furkanKullaniciMuzikSil(id);
             }
                   if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){

       gecisIslemleri.muratKullaniciMuzikSil(id);
             }
            Kullanici_Jazz_Muzikleri_Goruntule();
    }//GEN-LAST:event_JazzSilmeButonuActionPerformed

    private void PopSilmeButonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopSilmeButonuActionPerformed
        // TODO add your handling code here:
        int selectedrow = KendiPopTablosu.getSelectedRow();
        int id = (int) kendimodelPop.getValueAt(selectedrow, 0);
        //gecisIslemleri.KullaniciMuzikSil(id);
                                 if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){

        gecisIslemleri.etkaKullaniciMuzikSil(id);
             }
             else if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){

        gecisIslemleri.gamzeKullaniciMuzikSil(id);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){
gecisIslemleri.melisaKullaniciMuzikSil(id);
             }
                else   if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){

        gecisIslemleri.furkanKullaniciMuzikSil(id);
             }
                   if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){

       gecisIslemleri.muratKullaniciMuzikSil(id);
             }
        Kullanici_Pop_Muzikleri_Goruntule();
    }//GEN-LAST:event_PopSilmeButonuActionPerformed
 
        public void Kullanici_Klasik_Muzikleri_Goruntule() {
     if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){
        kendimodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.KullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelKlasik.addRow(eklenecek);
            }
        }
    }
        else  if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){
        kendimodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.etkaKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelKlasik.addRow(eklenecek);
            }
        }
    }
             else  if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){
        kendimodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.furkanKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelKlasik.addRow(eklenecek);
            }
        }
    }
       else  if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){
        kendimodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.melisaKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelKlasik.addRow(eklenecek);
            }
        }
    }
       else  if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){
        kendimodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.muratKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelKlasik.addRow(eklenecek);
            }
        }
    }

        }
    
    
    
    
    public void Kullanici_Jazz_Muzikleri_Goruntule() {
    if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){    
        kendimodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.KullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelJazz.addRow(eklenecek);
            }
        }
    }
        else  if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){
        kendimodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.etkaKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelJazz.addRow(eklenecek);
            }
        }
    }
            else  if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){
        kendimodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.furkanKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelJazz.addRow(eklenecek);
            }
        }
    }
                else  if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){
        kendimodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.melisaKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelJazz.addRow(eklenecek);
            }
        }
    }
                else  if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){
        kendimodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.muratKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelJazz.addRow(eklenecek);
            }
        }
    }
    
  
    
    }   
    
    
    
    public void Kullanici_Pop_Muzikleri_Goruntule() {
    if(normal_kullanici_adi.equalsIgnoreCase("gamze_dinç")){    
        kendimodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.KullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelPop.addRow(eklenecek);
            }
        }
    }
    else if(normal_kullanici_adi.equalsIgnoreCase("etkacure@gmail.com")){    
        kendimodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.etkaKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelPop.addRow(eklenecek);
            }
        }
    }
    else if(normal_kullanici_adi.equalsIgnoreCase("furkanyavuz@gmail.com")){    
        kendimodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.furkanKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelPop.addRow(eklenecek);
            }
        }
    }
    
    else if(normal_kullanici_adi.equalsIgnoreCase("melisayilmaz@gmail.com")){    
        kendimodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.melisaKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelPop.addRow(eklenecek);
            }
        }
    }
    
    else if(normal_kullanici_adi.equalsIgnoreCase("muratgunduz@gmail.com")){    
        kendimodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.muratKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                kendimodelPop.addRow(eklenecek);
            }
        }
    }
    
    
    } 
            
    public void Premium_Klasik_Muzikleri_Goruntule() {
        
           if(secilen_kullanici_adi.equalsIgnoreCase("Zehra Çelik")){
        premiummodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.zehraKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelKlasik.addRow(eklenecek);
            }
        }
               System.out.println("secildi");
    }
        else  if(secilen_kullanici_adi.equalsIgnoreCase("Sezen Kaya")){
        premiummodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.sezenKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelKlasik.addRow(eklenecek);
            }
        }
    }
             else  if(secilen_kullanici_adi.equalsIgnoreCase("Serra Şevval Kabak")){
        premiummodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.serraKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelKlasik.addRow(eklenecek);
            }
        }
    }
       else  if(secilen_kullanici_adi.equalsIgnoreCase("Onur Aksoy")){
        premiummodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.onurKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelKlasik.addRow(eklenecek);
            }
        }
    }
       else  if(secilen_kullanici_adi.equalsIgnoreCase("Okan Demir")){
        premiummodelKlasik.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.okanKullaniciKlasikSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelKlasik.addRow(eklenecek);
            }
        }
    }
    } 
    
       public void Premium_Jazz_Muzikleri_Goruntule() {
        
         if(secilen_kullanici_adi.equalsIgnoreCase("Zehra Çelik")){
        premiummodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.zehraKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelJazz.addRow(eklenecek);
            }
        }
    }
        else  if(secilen_kullanici_adi.equalsIgnoreCase("Sezen Kaya")){
        premiummodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.sezenKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelJazz.addRow(eklenecek);
            }
        }
    }
             else  if(secilen_kullanici_adi.equalsIgnoreCase("Serra Şevval Kabak")){
        premiummodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.serraKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelJazz.addRow(eklenecek);
            }
        }
    }
       else  if(secilen_kullanici_adi.equalsIgnoreCase("Onur Aksoy")){
        premiummodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.onurKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelJazz.addRow(eklenecek);
            }
        }
    }
       else  if(secilen_kullanici_adi.equalsIgnoreCase("Okan Demir")){
        premiummodelJazz.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.okanKullaniciJazzSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelJazz.addRow(eklenecek);
            }
        }
    }
    }
              public void Premium_Pop_Muzikleri_Goruntule() {
                if(secilen_kullanici_adi.equalsIgnoreCase("Zehra Çelik")){
        premiummodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.zehraKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelPop.addRow(eklenecek);
            }
        }
    }
        else  if(secilen_kullanici_adi.equalsIgnoreCase("Sezen Kaya")){
        premiummodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.sezenKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelPop.addRow(eklenecek);
            }
        }
    }
             else  if(secilen_kullanici_adi.equalsIgnoreCase("Serra Şevval Kabak")){
        premiummodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.serraKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelPop.addRow(eklenecek);
            }
        }
    }
       else  if(secilen_kullanici_adi.equalsIgnoreCase("Onur Aksoy")){
        premiummodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.onurKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelPop.addRow(eklenecek);
            }
        }
    }
       else  if(secilen_kullanici_adi.equalsIgnoreCase("Okan Demir")){
        premiummodelPop.setRowCount(0);
        
        ArrayList<Sarki> sarkilar = new ArrayList<Sarki>();
        
        sarkilar = gecisIslemleri.okanKullaniciPopSarkilariGetir();
        
        if (sarkilar != null ) {
            
            for (Sarki sarki : sarkilar) {
                Object[] eklenecek = {sarki.getSarkiID(), sarki.getSarkiAd(), sarki.getSarkiTarih(), 
                                      sarki.getSarkiSanatci(), sarki.getSarkiAlbum(), sarki.getSarkiTur(), 
                                      sarki.getSarkiSure(), sarki.getDinlenmeSayisi()};
                
                premiummodelPop.addRow(eklenecek);
            }
        }
    }
    }
    
      
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gecis_Paneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gecis_Paneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gecis_Paneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gecis_Paneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Gecis_Paneli dialog = new Gecis_Paneli(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GeriButonu;
    private javax.swing.JButton JazzEkleButonu;
    private javax.swing.JButton JazzSilmeButonu;
    private javax.swing.JButton JazzTumunuEkle;
    private javax.swing.JTextField KendiJazzArama;
    private javax.swing.JTable KendiJazzTablosu;
    private javax.swing.JTextField KendiKlasikArama;
    private javax.swing.JTable KendiKlasikTablosu;
    private javax.swing.JLabel KendiKullaniciAdiAlanimiz;
    private javax.swing.JLabel KendiKullaniciAdimiz;
    private javax.swing.JTextField KendiPopArama;
    private javax.swing.JTable KendiPopTablosu;
    private javax.swing.JButton KlasikEkleButonu;
    private javax.swing.JButton KlasikSilmeButonu;
    private javax.swing.JButton KlasikTumunuEkleButonu;
    private javax.swing.JButton PopEkleButonu;
    private javax.swing.JButton PopSilmeButonu;
    private javax.swing.JButton PopTumunuEkle;
    private javax.swing.JTextField PremiumJazzArama;
    private javax.swing.JTable PremiumJazzTablosu;
    private javax.swing.JTextField PremiumKlasikArama;
    private javax.swing.JTable PremiumKlasikTablosu;
    private javax.swing.JLabel PremiumKullaniciAdiAlani;
    private javax.swing.JTextField PremiumPopArama;
    private javax.swing.JTable PremiumPopTablosu;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    // End of variables declaration//GEN-END:variables
}
